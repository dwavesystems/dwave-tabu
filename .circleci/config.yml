version: 2
jobs:
  test-3.8: &full-test-template
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate
            python --version
            pip install -r tests/requirements.txt

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install swig
          command: |
            sudo apt-get install swig

      - run: &install-package-template
          name: install package
          command: |
            . env/bin/activate
            python setup.py build_ext --inplace

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover

      - store_artifacts:
          path: ./htmlcov

#      - run:
#          name: codecov
#          command: |
#            . env/bin/activate
#            codecov

      - run:
          name: doctest
          command: |
            . env/bin/activate
            pip install -r docs/requirements.txt
            python setup.py install
            make -C docs/ doctest

      - run: &sdist-build-template
          name: build sdist
          command: |
            . env/bin/activate
            python setup.py sdist

      - run: &wheel-build-template
          name: create bdist_wheel
          command: |
            . env/bin/activate
            python setup.py bdist_wheel

      - store_artifacts:
          path: ./dist

  test-3.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.7-stretch

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6-jessie

  test-3.5:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.5-jessie

  test-osx-3.8: &osx-tests-template
    macos:
      xcode: "11.2.1"
    environment:
      PYTHON: 3.8.0
      HOMEBREW_NO_AUTO_UPDATE: 1

      # Force (lie about) macOS 10.9 binary compatibility.
      # Needed for properly versioned wheels.
      # See: https://github.com/MacPython/wiki/wiki/Spinning-wheels
      MACOSX_DEPLOYMENT_TARGET: 10.9

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1

      - run:
          name: install swig
          command: |
            brew install swig

      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate
            python --version
            pip install -r tests/requirements.txt

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-package-template
        
      - run: *run-tests-template

      - run: *sdist-build-template

      - run: *wheel-build-template

      - store_artifacts:
          path: ./dist

  test-osx-3.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.7.4
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.5
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.5:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.5.5
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  cpp-tests:
    docker:
      # just use a python image, all we really want is debian
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Installing gcc and cmake
          command: |
            sudo apt-get update
            sudo apt-get install -y gcc g++ cmake

      - run:
          name: run c++ tests
          command: |
            mkdir -p build
            cd build
            cmake .. -DTABU_BUILD_TESTS=ON
            make
            ./tests/run_tests

##################################################################################################
# Deploy
##################################################################################################

  build-manylinux-64: &manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_x86_64

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install swig from source
          command: |
            # on manylinux (CentOS 5), latest yum swig does not support Python 3
            # install it from source
            export BUILD_PREFIX="${BUILD_PREFIX:-/usr/local}"
            . .circleci/utils.sh
            install_swig
            # make available downstream, check version
            export PATH="$BUILD_PREFIX/bin:$PATH"
            swig -version

      - run:
          name: build wheels
          command: |
            for PYBIN in /opt/python/*/bin; do
              if "${PYBIN}/python" -c "import sys; sys.exit(sys.version_info>=(3, 5))"; then continue; fi;
              "${PYBIN}/pip" install -r requirements.txt
              "${PYBIN}/python" setup.py build_ext --inplace
              "${PYBIN}/python" setup.py bdist_wheel -d ./wheelhouse
              "${PYBIN}/python" setup.py sdist -d ./dist
            done

      - run:
          name: bundle shared libraries into wheels
          command: |
            for whl in ./wheelhouse/dwave*tabu*.whl; do
              auditwheel repair "$whl" -w ./dist
            done

      - store_artifacts:
          path: ./dist

      - run: &init-pypirc-template
          name: init .pypirc
          command: |
            echo "[pypi]" > ~/.pypirc
            echo "username = $PYPI_USERNAME" >> ~/.pypirc
            echo "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create a virtualenv
          command: |
            pythons=(/opt/python/*/bin)
            python="${pythons[0]}"
            "$python/pip" install virtualenv
            "$python/python" -m virtualenv env

      - run: &upload-template
          name: install twine and deploy
          command: |
            . env/bin/activate
            python -m pip install twine
            twine upload --skip-existing ./dist/*

  build-manylinux-32:
    <<: *manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_i686

  build-osx-3.8: &osx-build-template
    macos:
      xcode: "11.2.1"
    environment:
      PYTHON: 3.8.0
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - run:
          name: install swig
          command: |
            brew install swig

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-11.2.1

      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - run: *install-dependencies-template

      - run: *install-package-template
        
      - run: *wheel-build-template

      - store_artifacts:
          path: ./dist

      - run: *init-pypirc-template

      - run: *upload-template

  build-osx-3.7:
    <<: *osx-build-template
    environment:
      PYTHON: 3.7.4
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  build-osx-3.6:
    <<: *osx-build-template
    environment:
      PYTHON: 3.6.5
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

  build-osx-3.5:
    <<: *osx-build-template
    environment:
      PYTHON: 3.5.5
      MACOSX_DEPLOYMENT_TARGET: 10.9
      HOMEBREW_NO_AUTO_UPDATE: 1

workflows:
  version: 2
  test:
    jobs:
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      - cpp-tests

  deploy:
    jobs:
      - build-manylinux-64:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-manylinux-32:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.8:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.7:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.6:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.5:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
